"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"About","href":"/silk/docs/intro","docId":"intro"},{"type":"link","label":"The SILK Lifecycle","href":"/silk/docs/lifecycle","docId":"lifecycle"},{"type":"category","label":"Getting Started","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Installing SILK","href":"/silk/docs/getting_started/installation","docId":"getting_started/installation"},{"type":"link","label":"The Initialization Phase","href":"/silk/docs/getting_started/initialization","docId":"getting_started/initialization"}]}]},"docs":{"getting_started/initialization":{"id":"getting_started/initialization","title":"The Initialization Phase","description":"---","sidebar":"defaultSidebar"},"getting_started/installation":{"id":"getting_started/installation","title":"Installing SILK","description":"Head over to GitHub Releases and download the attached .rbxm file from the latest release. Alternatively, download the source code and move the src folder inside your project and rename it to \\"silk\\".","sidebar":"defaultSidebar"},"intro":{"id":"intro","title":"About","description":"SILK is a Roblox game framework that aims to simplify the game development process. The simple stage-execution model of SILK enables developers to manage stage execution in an organized manner. Moreover, SILK is highly adaptable to any type of development workflow and preferences. It also introduces Packages, which provide a structured way to manage codebase and its functionality. With packages, developers are able to maintain and develop code in a non-destrive manner, making the execution far more reliable and predictable. Pre-written packages that provide core functionality are also included by default in the framework.","sidebar":"defaultSidebar"},"lifecycle":{"id":"lifecycle","title":"The SILK Lifecycle","description":"The initialization phase is initiated by a bootstrapper script which performs the necessary functions to provide packages, containers, etc. to the framework. During the uninitialized phase, any script that attempts to access the primary class singleton using Silk.Wait will yield until the initialization script completes execution. It\'s important to note that the server initialization phase takes precedence over the client initialization phase. If the client requests initialization data before the server reaches the initialized state, the client will yield until the server is ready to send data back.","sidebar":"defaultSidebar"}}}')}}]);