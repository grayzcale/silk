"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[756],{9228:e=>{e.exports=JSON.parse('{"functions":[{"name":"waitFor","desc":"```lua\\nsilk.waitFor({workspace, \'Baseplate\' }, 10)\\n```\\n\\nThis is a custom wrapper function for the `.WaitForChild` method. Use this utility function to simplify your code and avoid long chains of `.WaitForChild` calls.\\n\\n```lua\\t\\t\\n-- simplify this\\nA:WaitForChild(\'B\'):WaitForChild(\'C\'):WaitForChild(\'D\')\\n\\n-- to this\\nsilk.waitFor{ A, \'B\', \'C\', \'D\' }\\n```","params":[{"name":"objects","desc":"","lua_type":"table"},{"name":"timeout?","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Instance\\r\\n"}],"function_type":"static","tags":["utility"],"yields":true,"source":{"line":137,"path":"src/init.lua"}},{"name":"getScript","desc":"\\t\\nThis utility function returns a reference to the primary [Silk] object. You can use it to easily access the contents of the modulescript, for instance, when appending *essential* packages to the framework.\\n\\n```lua\\nsilk:AppendPackages{\\n\\tsilk.getScript():WaitForChild(\'essentials\')\\n}\\n```","params":[],"returns":[{"desc":"","lua_type":"Script\\r\\n"}],"function_type":"static","tags":["utility"],"source":{"line":160,"path":"src/init.lua"}},{"name":"Server","desc":"Returns `true` if current execution is taking place on the server.","params":[],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":168,"path":"src/init.lua"}},{"name":"GetService","desc":"When Gets a service as `Instance` and stores reference in cache.","params":[{"name":"service","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Instance\\r\\n"}],"function_type":"method","source":{"line":176,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"Service","desc":"Directly access service from [Silk] to get it as an [Instance] and cache it.\\n\\n```lua\\nlocal lighting = silk.Lighting\\nlocal ReplicatedStorage = silk.ReplicatedStorage\\nlocal service = silk.<Service>\\n```","lua_type":"Instance","source":{"line":22,"path":"src/init.lua"}},{"name":"Package","desc":"","lua_type":"ModuleScript","source":{"line":27,"path":"src/init.lua"}}],"name":"Silk","desc":"A singleton class which is shared across all the scripts in the realm.","source":{"line":10,"path":"src/init.lua"}}')}}]);