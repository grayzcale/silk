"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[841],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>g});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(i),h=r,g=d["".concat(o,".").concat(h)]||d[h]||u[h]||a;return i?n.createElement(g,l(l({ref:t},p),{},{components:i})):n.createElement(g,l({ref:t},p))}));function g(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,l=new Array(a);l[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<a;c++)l[c]=i[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}h.displayName="MDXCreateElement"},69784:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=i(87462),r=(i(67294),i(3905));const a={sidebar_position:2},l="Initialization Phase",s={unversionedId:"getting_started/initialization_phase",id:"getting_started/initialization_phase",title:"Initialization Phase",description:"As mentioned in The SILK Lifecycle, the initialization phase is responsible for handling the neccessary dependencies that your project requires.",source:"@site/docs/getting_started/initialization_phase.md",sourceDirName:"getting_started",slug:"/getting_started/initialization_phase",permalink:"/silk/docs/getting_started/initialization_phase",draft:!1,editUrl:"https://github.com/wicked-wlzard/silk/edit/master/docs/getting_started/initialization_phase.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Setting Up",permalink:"/silk/docs/getting_started/setting_up"},next:{title:"Accessing SILK",permalink:"/silk/docs/getting_started/accessing_silk"}},o={},c=[{value:"Initializer Script",id:"initializer-script",level:3},{value:"Sample initializer script:",id:"sample-initializer-script",level:5},{value:"Client Initializer Script",id:"client-initializer-script",level:3},{value:"Sample client initializer script:",id:"sample-client-initializer-script",level:5}],p={toc:c},d="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(d,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"initialization-phase"},"Initialization Phase"),(0,r.kt)("p",null,"As mentioned in ",(0,r.kt)("a",{parentName:"p",href:"/docs/lifecycle/"},"The SILK Lifecycle"),", the initialization phase is responsible for handling the neccessary dependencies that your project requires."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"initializer-script"},"Initializer Script"),(0,r.kt)("p",null,"To begin, start by creating a single script on the server. Require the ",(0,r.kt)("inlineCode",{parentName:"p"},"Silk")," object normally as you would with any typical ",(0,r.kt)("inlineCode",{parentName:"p"},"ModuleScript")," and type in any necessary configurations. The general purpose of this script is to end the initialization phase and allow other scripts to begin execution. Although the contents of this script will vary with every project, a typical initializer script may look something like the following."),(0,r.kt)("h5",{id:"sample-initializer-script"},"Sample initializer script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- || initializer.server.lua ||\n\n-- Path to the SILK ModuleScript\nlocal silk = require(game:GetService('ReplicatedStorage'):WaitForChild('silk'))\n\n-- Adding in containers\nsilk.AppendPackage{\n    silk.ReplicatedStorage:WaitForChild('Assets'),\n    silk.ServerStorage:WaitForChild('PrivateAssets'),\n}\n\n-- Adding in classes\nsilk.AppendClasses{ silk.ReplicatedStorage:WaitForChild('Classes') }\n\n-- Adding in packages\nsilk.AppendPackage{\n    silk.getScript():WaitForChild('essentials'),\n    silk.ReplicatedStorage:WaitForChild('Packages'),\n}\n\n-- Initialization of the Network package and adding in communicators\nsilk.Packages.Network:AppendCommunicators{ silk.ServerStorage:WaitForChild('Communicators') }\n\n-- Initialization of other singleton packages\nsilk:InitPackage('DataStorePackage')\n\n-- Complete initialization\nsilk:Weave()\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"client-initializer-script"},"Client Initializer Script"),(0,r.kt)("p",null,"Unlike the server initializer script, providing configuration data to the client is not necessary. When a new client joins the server, the script automatically requests intialization data from the server and makes a seamless copy of singleteon class from the server. As seen above, some data like folders in the ",(0,r.kt)("inlineCode",{parentName:"p"},"ServerStorage")," will not be replicated over to the client since they are hidden. This script should generally be used to load in the necessary assets for the client and to initialize any client-sided components."),(0,r.kt)("h5",{id:"sample-client-initializer-script"},"Sample client initializer script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- || initializer.client.lua ||\n\n-- Path to the SILK ModuleScript\nlocal silk = require(game:GetService('ReplicatedStorage'):WaitForChild('silk'))\n\n-- Complete client-sided initialization\nsilk:Weave()\n")))}u.isMDXComponent=!0}}]);