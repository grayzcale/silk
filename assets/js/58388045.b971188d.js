"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[348],{6254:e=>{e.exports=JSON.parse('{"functions":[{"name":"BindMouseLock","desc":"Change the MouseLock keybind for the client. A complete list of all the keys can be found [here](https://create.roblox.com/docs/reference/engine/enums/KeyCode).","params":[{"name":"key","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":30,"path":"src/essentials/Client.lua"}},{"name":"DisableControls","desc":"Disable control for the client character.","params":[],"returns":[],"function_type":"method","source":{"line":53,"path":"src/essentials/Client.lua"}},{"name":"EnableControls","desc":"Re-enable control for the client character.","params":[],"returns":[],"function_type":"method","source":{"line":64,"path":"src/essentials/Client.lua"}},{"name":"GetCharacter","desc":"Performs appropriate checks to see if the client character exists and if it does, returns the character `Model`, `Humanoid`, and the `HumanoidRootPart`. Returns `nil` if the character doesn\'t exist and `waitFor` isn\'t set to `true`.","params":[{"name":"waitFor","desc":"","lua_type":"boolean"}],"returns":[{"desc":"","lua_type":"Model, Humanoid, Part | nil"}],"function_type":"method","yields":true,"source":{"line":78,"path":"src/essentials/Client.lua"}}],"properties":[{"name":"Client","desc":"Returns the [Player] object for the client. Equivalent to `game.Players.LocalPlayer`.","lua_type":"Player","source":{"line":111,"path":"src/essentials/Client.lua"}},{"name":"PlayerGui","desc":"Returns the [PlayerGui] of the client.","lua_type":"PlayerGui","source":{"line":117,"path":"src/essentials/Client.lua"}}],"types":[],"name":"Client","desc":"This package contains methods and attributes involved with pure client-sided components.\\n\\n| Package Attribute | Value |\\n| --- | --- |\\n| __singleton | true |\\n| __domain | local |","source":{"line":105,"path":"src/essentials/Client.lua"}}')}}]);