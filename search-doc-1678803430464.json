[{"title":"Getting Started with SILK","type":0,"sectionRef":"#","url":"/silk/docs/intro","content":"Getting Started with SILK","keywords":""},{"title":"Client","type":0,"sectionRef":"#","url":"/silk/api/Client","content":"On this page Client","keywords":""},{"title":"Silk","type":0,"sectionRef":"#","url":"/silk/api/Silk","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#types","content":" "},{"title":"Service​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#Service","content":"&lt;/&gt; type Service = Instance  Directly access service from Silk to get it as an Instance and cache it. local lighting = silk.Lighting local ReplicatedStorage = silk.ReplicatedStorage local service = silk.&lt;Service&gt;   "},{"title":"Package​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#Package","content":"&lt;/&gt; type Package = ModuleScript   "},{"title":"Functions​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#functions","content":" "},{"title":"waitFor​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#waitFor","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields utility &lt;/&gt; Silk.waitFor( objects: table, timeout?: number ) → Instance  silk.waitFor({workspace, 'Baseplate' }, 10) This is a custom wrapper function for the .WaitForChild method. Use this utility function to simplify your code and avoid long chains of .WaitForChild calls. -- simplify this A:WaitForChild('B'):WaitForChild('C'):WaitForChild('D') -- to this silk.waitFor{ A, 'B', 'C', 'D' }   "},{"title":"getScript​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#getScript","content":"utility &lt;/&gt; Silk.getScript() → Script  This utility function returns a reference to the primary Silk object. You can use it to easily access the contents of the modulescript, for instance, when appending essential packages to the framework. silk:AppendPackages{ silk.getScript():WaitForChild('essentials') }   "},{"title":"Server​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#Server","content":"&lt;/&gt; Silk:Server() → boolean Returns true if current execution is taking place on the server.  "},{"title":"GetService​","type":1,"pageTitle":"Silk","url":"/silk/api/Silk#GetService","content":"&lt;/&gt; Silk:GetService(service: string) → Instance  When Gets a service as Instance and stores reference in cache. "}]